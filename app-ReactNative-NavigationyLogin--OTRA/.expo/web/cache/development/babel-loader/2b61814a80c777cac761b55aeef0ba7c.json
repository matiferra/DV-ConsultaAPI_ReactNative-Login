{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/DATOS/Escritorio/APPs/TERMINADO/app-ReactNative-NavigationyLogin--OTRA/Screens/ApiMedicamentos.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar obtenerInfoPais = require(\"../library.js\");\n\nexport var Api = function (_React$Component) {\n  _inherits(Api, _React$Component);\n\n  var _super = _createSuper(Api);\n\n  function Api(props) {\n    var _this;\n\n    _classCallCheck(this, Api);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      subregion: \"\",\n      name: \"\",\n      capital: \"\",\n      population: \"\",\n      encontrado: true\n    };\n    _this.handlerObtenerInfoPais = _this.handlerObtenerInfoPais.bind(_assertThisInitialized(_this));\n    _this.handlerObtenerNombrePais = _this.handlerObtenerNombrePais.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Api, [{\n    key: \"handlerObtenerNombrePais\",\n    value: function handlerObtenerNombrePais(event) {\n      this.setState({\n        name: event.target.value\n      });\n    }\n  }, {\n    key: \"handlerObtenerInfoPais\",\n    value: function handlerObtenerInfoPais() {\n      var _this2 = this;\n\n      obtenerInfoPais(this.state.name).then(function (info) {\n        _this2.setState({\n          encontrado: true,\n          subregion: \"Region \" + info.data[0].subregion,\n          name: \"Pais: \" + info.data[0].name,\n          capital: \"Capital: \" + info.data[0].capital,\n          population: \"Nro Habitantes: \" + info.data[0].population\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this2.setState({\n          encontrado: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.encontrado === true) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.peticiones,\n          h1: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }\n        }, this.state.subregion), React.createElement(Text, {\n          style: styles.peticiones,\n          h1: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        }, this.state.name), React.createElement(Text, {\n          style: styles.peticiones,\n          h1: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, this.state.capital), React.createElement(Text, {\n          style: styles.peticiones,\n          h1: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }\n        }, this.state.population)), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.titulo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }\n        }, \" Ingrese Nombre del Pais \"), React.createElement(TextInput, {\n          editable: true,\n          keyboardAppearance: 'light',\n          maxLength: 20,\n          style: styles.cuadrado,\n          onChange: this.handlerObtenerNombrePais,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }\n        }), React.createElement(Button, {\n          onPress: this.handlerObtenerInfoPais,\n          title: \"Apretar\",\n          color: \"#990\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }\n        }), React.createElement(Text, {\n          style: styles.aclaracion,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }\n        }, \" Escriba nombre del pais en su lengua de Origen\")));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.danger,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }, \"NO SE ENCONTRO PAIS, VUELVA A INTENTARLO\"), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.titulo,\n          h2: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }\n        }, \" Ingrese Nombre del Pais\"), React.createElement(TextInput, {\n          editable: true,\n          keyboardAppearance: 'light',\n          maxLength: 20,\n          style: styles.cuadrado,\n          onChange: this.handlerObtenerNombrePais,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }\n        }), React.createElement(Button, {\n          onPress: this.handlerObtenerInfoPais,\n          title: \"Apretar\",\n          color: \"#841584\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }\n        })), React.createElement(Text, {\n          style: styles.aclaracion,\n          h2: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }\n        }, \" Escriba nombre del pais en su lengua de Origen\"));\n      }\n    }\n  }]);\n\n  return Api;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#222',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cuadrado: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 2,\n    margin: 10,\n    textAlign: 'center'\n  },\n  peticiones: {\n    color: 'white'\n  },\n  titulo: {\n    color: '#099'\n  },\n  aclaracion: {\n    color: 'grey'\n  },\n  danger: {\n    color: 'red',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/DATOS/Escritorio/APPs/TERMINADO/app-ReactNative-NavigationyLogin--OTRA/Screens/ApiMedicamentos.js"],"names":["React","obtenerInfoPais","require","Api","props","state","subregion","name","capital","population","encontrado","handlerObtenerInfoPais","bind","handlerObtenerNombrePais","event","setState","target","value","then","info","data","catch","err","console","log","styles","container","peticiones","titulo","cuadrado","aclaracion","danger","Component","StyleSheet","create","backgroundColor","flex","alignItems","justifyContent","height","borderColor","borderWidth","margin","textAlign","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Button, Text, TextInput, View } from 'react-native';\r\n\r\nconst obtenerInfoPais = require(\"../library.js\");\r\n\r\nexport class Api extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            subregion: \"\",\r\n            name: \"\",\r\n            capital: \"\",\r\n            population: \"\",\r\n            encontrado: true,\r\n        }\r\n \r\n        this.handlerObtenerInfoPais = this.handlerObtenerInfoPais.bind(this);\r\n        this.handlerObtenerNombrePais = this.handlerObtenerNombrePais.bind(this);    \r\n    }  \r\n    \r\n        handlerObtenerNombrePais(event){\r\n            this.setState({name: event.target.value});\r\n        }\r\n   \r\n        handlerObtenerInfoPais(){\r\n            obtenerInfoPais(this.state.name).then((info) => {\r\n                this.setState({ encontrado: true,\r\n                                subregion: \"Region \" + info.data[0].subregion, \r\n                                name: \"Pais: \"+info.data[0].name,\r\n                                capital: \"Capital: \" + info.data[0].capital,\r\n                                population: \"Nro Habitantes: \" + info.data[0].population,\r\n                                })\r\n             }).catch((err) => {\r\n                console.log(err);\r\n                this.setState({     \r\n                    encontrado: false\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n        render(){\r\n           \r\n            if(this.state.encontrado === true){\r\n                return (\r\n                    <View style={styles.container}>\r\n                        <View>\r\n                            <Text style={styles.peticiones} h1>{this.state.subregion}</Text>\r\n                            <Text style={styles.peticiones} h1>{this.state.name}</Text>\r\n                            <Text style={styles.peticiones} h1>{this.state.capital}</Text>\r\n                            <Text style={styles.peticiones} h1>{this.state.population}</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Text style={styles.titulo}> Ingrese Nombre del Pais </Text>\r\n                            <TextInput\r\n                                editable\r\n                                keyboardAppearance={'light'}\r\n                                maxLength={20}  \r\n                                style={styles.cuadrado}\r\n                                onChange={this.handlerObtenerNombrePais}\r\n                            />\r\n                            <Button\r\n                                onPress={this.handlerObtenerInfoPais}\r\n                                title=\"Apretar\"\r\n                                color=\"#990\"\r\n                            />\r\n                            <Text style={styles.aclaracion}> Escriba nombre del pais en su lengua de Origen</Text>\r\n                        </View>\r\n                    </View>\r\n                );\r\n            } else {\r\n                return (\r\n                    <View style={styles.container}>\r\n                        <Text style={styles.danger}>NO SE ENCONTRO PAIS, VUELVA A INTENTARLO</Text>\r\n\r\n                        <View >\r\n                            <Text style={styles.titulo} h2> Ingrese Nombre del Pais</Text>\r\n                            <TextInput\r\n                            editable\r\n                            keyboardAppearance={'light'}\r\n                            maxLength={20}  \r\n                            style={styles.cuadrado}\r\n                            onChange={this.handlerObtenerNombrePais}\r\n                            /> \r\n                            <Button \r\n                                onPress={this.handlerObtenerInfoPais}\r\n                                title=\"Apretar\"\r\n                                color=\"#841584\"\r\n                            />\r\n                        </View>\r\n                            <Text style={styles.aclaracion} h2> Escriba nombre del pais en su lengua de Origen</Text>\r\n                        \r\n                        \r\n                    </View>\r\n                );\r\n            }\r\n        }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#222',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    cuadrado: {\r\n        height: 40, \r\n        borderColor: 'gray', \r\n        borderWidth: 2,\r\n        margin: 10,\r\n        textAlign: 'center',\r\n    },\r\n    peticiones: {\r\n      color: 'white',\r\n    },\r\n    titulo: {\r\n      color: '#099',\r\n    },\r\n    aclaracion: {\r\n      color: 'grey'\r\n    },\r\n    danger: {\r\n        color: 'red',\r\n        fontSize: 20\r\n    }\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}